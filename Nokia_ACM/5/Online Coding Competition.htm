<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
	<title>Online Coding Competition</title>
	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge,Chrome=1">
	<link rel="stylesheet" type="text/css" href="Online%20Coding%20Competition_files/bootstrap.css">
	<link rel="stylesheet" type="text/css" href="Online%20Coding%20Competition_files/bootstrap-responsive.css">
	<link rel="stylesheet" type="text/css" href="Online%20Coding%20Competition_files/Competition.css">
	<link rel="stylesheet" type="text/css" href="Online%20Coding%20Competition_files/codemirror.css">
	<link rel="stylesheet" type="text/css" href="Online%20Coding%20Competition_files/show-hint.css">
	<link rel="stylesheet" type="text/css" href="Online%20Coding%20Competition_files/fullscreen.css">
	<link rel="stylesheet" type="text/css" href="Online%20Coding%20Competition_files/neat.css">
	<script src="Online%20Coding%20Competition_files/jquery-3.js"></script>
	<script src="Online%20Coding%20Competition_files/bootstrap.js"></script>
	<script src="Online%20Coding%20Competition_files/codemirror.js"></script>
	<script src="Online%20Coding%20Competition_files/matchbrackets.js"></script>
	<script src="Online%20Coding%20Competition_files/javascript.js"></script>
	<script src="Online%20Coding%20Competition_files/python.js"></script>
	<script src="Online%20Coding%20Competition_files/show-hint.js"></script>
	<script src="Online%20Coding%20Competition_files/javascript-hint.js"></script>
	<script src="Online%20Coding%20Competition_files/clike.js"></script>
	<script src="Online%20Coding%20Competition_files/lint.js"></script>
	<script src="Online%20Coding%20Competition_files/json-lint.js"></script>
	<script src="Online%20Coding%20Competition_files/javascript-lint.js"></script>
	<script src="Online%20Coding%20Competition_files/css-lint.js"></script>
	<script src="Online%20Coding%20Competition_files/fullscreen.js"></script>
	<script src="Online%20Coding%20Competition_files/GlobalData.js"></script>
	<script src="Online%20Coding%20Competition_files/TeledataAjax.js"></script>
	<script src="Online%20Coding%20Competition_files/Time.js"></script>
	<script src="Online%20Coding%20Competition_files/Competition.js"></script>
</head>

<body>
	<div class="container">
		<div id="main-header" class="row">
			<div id="compe-name" class="col-md-5">Hangzhou_Coding_Contest_2018</div>

			<div class="col-md-7">
				<div class="row">
					<div id="" class="col-md-4">select your dev language</div>
					<div id="nav-main" class="col-md-4">
						<div class="dropdown">
							<nav id="compe-nav">
								<select id="compe-sel" onclick="changeCodeLanguage(this)">
									<option value="C">C++14(G++5.4.0)</option>
									<option value="Python" selected="selected">Python 3.5</option>
									<option value="Java">Java 1.8</option>
								</select>
							</nav>
						</div>
					</div>
					<div id="ShowRemainTime" class="col-md-4"><font size="3" color="green">End in 12d 11h 52m 47s</font></div>
				</div>
			</div>
		</div>
		<div id="compe_container" class="row">
			<div id="com-problem" class="col-md-5">
				<div id="com-problem-textarea" class="col-md-12">
					<textarea id="showProblem" class="form-control" rows="25" readonly="readonly">1. Task description
This challenge is to build a model to predict gender based on names. 

Data:
A training dataset consists of names and gender.
A test dataset consists of names only. 

Your job is to: 
1) Extract features
2) build and train a machine learning model from scratch
3) use the trained model to predict the gender
4) submit your code

Criteria: 
1) Prediction accuracy on test set (judge system will use the same training set to train your model and use a test set to evaluate your code and model).
2) The solution (including training and prediction) should finish in 10 minutes.

Training input file format as follow:
     John,male
     Lucy,female
     ...
     
Test set input file format as follow:
     John
     Lucy
     ...
 
The input of your program is 1 argument, the path of a test data set file.

The output is standard output print, the format of which is as same as training file.

Third-party package e.g. Python: (only packages listed here can be used)
     Numpy
NOTE: If you want to use C/C++ or Java for higher performance, and thus need to install 3rd party library, please let the contest commitee know, and the commitee will evaluate it to decide if it's allowed. If yes, the library will be installed on server.
Only lib for matrix calcluation can be allowed, the existing machine learning lib is forbiden.

Machine learning Models:
     Machine Learning models are unrestricted. E.g. Logistic Regression and Artificial Neural Network.

Training data file The full path of training data is fixed if you run it online, please don't change it.
     "/var/www/html/training_dataset.txt"
You can also download it from this link:
     http://10.182.198.199/training_dataset.txt


2. Feature extraction
feature extraction starts from an initial set of measured data and builds derived values (features) intended to be informative and non-redundant, facilitating the subsequent learning and generalization steps, and in some cases leading to better human interpretations.
Here the initial set of measured data is names consist of letters, we need to extract features in a format supported by machine learning algorithms.
We use X denote features and X = {x1, x2, ..., xn}, n denote the number of features, for examples, For example, we can extract features like blew:
x1 = 1 if 'a' appears in name, else 0
x2 = numbers of 'a' in name
if we have two names 'John' and 'Lucy', the features can extract as the table

names   x1=if 'c' appears   x2=numbers of 'h'   ...
John    0                   1                   ...
Lucy    1                   0                   ...


3. Model examples
1) Neural Network from scratch http://www.wildml.com/2015/09/implementing-a-neural-network-from-scratch/
2) Logistic Regression from scratch: https://medium.com/@martinpella/logistic-regression-from-scratch-in-python-124c5636b8ac


////////////////////中文分割线////////////////////


1. 任务描述
根据（姓名，性别）数据建立机器学习/深度学习模型，以根据姓名预测性别。

数据：
训练集：包含(姓名，性别)的数据
测试集：只包含姓名

你需要做的：
1）从姓名中提取特征
2）从零开始建立并训练模型（不能使用第三方机器学习库）
3）根据姓名预测性别
4）提交你的代码

评分标准：
1）模型在测试集上的预测正确率
2）程序执行时间（包括训练和预测）必须小于10分钟，否则不计算正确率

训练集格式如下：
John,male
Lucy,female
...

测试集格式如下：
John
Lucy
...

你的程序输入只有一个参数，一个测试集文件的路径。

输出是标准打印输出，格式与训练集文件格式相同。

允许使用的python第三方库：
Numpy
注意： 如果你为了更高的性能而使用C/C++或Java，请告知组委会你需要的第三方库，组委会回酌情评估是否允许，如允许则在服务器上安装。
一般只有辅助矩阵运算的库才可能被允许，现成的机器学习库是被禁止的。

机器学习模型：
允许使用任何机器学习模型，如逻辑回归模型，神经网络等。

在线调试时，训练集文件路径是固定的，如下：
"/var/www/html/training_dataset.txt"
训练集下载路径：
http://10.182.198.199/training_dataset.txt

2.特征提取
我们可以用X表示特征 X = {x1, x2, ..., xn}， n为特征个数， 比如：
x1 = 1 如果字母a出现在名字中，否则为0
x2 = ‘a’ 在名字中出现的次数

对 'John','Lucy'等名字，可以提取如下特征:
names x1=是否包含字母‘c’  x2=字母‘h’出现次数    ...
John    0                   1                   ...
Lucy    1                   0                   ...

3.模型实现例子：
1) Neural Network from scratch http://www.wildml.com/2015/09/implementing-a-neural-network-from-scratch/
2) Logistic Regression from scratch: https://medium.com/@martinpella/logistic-regression-from-scratch-in-python-124c5636b8ac
</textarea>
				</div>
			</div>
			<div id="com-editor-answer" class="col-md-7">
				<div id="com-editor-main" class="row">
					<div id="com-editor" class="col-md-12">
						<textarea id="showCodeMirror" rows="50" style="display: none;"></textarea><div class="CodeMirror cm-s-neat CodeMirror-wrap CodeMirror-focused" style="width: auto; height: 482px;"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 124.8px; left: 106.133px;"><textarea style="position: absolute; bottom: -1em; padding: 0px; width: 1px; height: 1em; outline: medium none currentcolor;" autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" wrap="off"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="true"><div class="CodeMirror-sizer" style="margin-left: 30px; margin-bottom: -16px; border-right-width: 14px; min-height: 228px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div style="position: relative; outline: medium none currentcolor;" role="presentation"><div class="CodeMirror-measure"><span><span>​</span>x</span><div class="CodeMirror-linenumber CodeMirror-gutter-elt"><div>11</div></div></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style="visibility: hidden;"><div class="CodeMirror-cursor" style="left: 75.3333px; top: 120px; height: 20px;">&nbsp;</div></div><div class="CodeMirror-code" role="presentation" style=""><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation"><span class="cm-comment"># -*- coding: utf-8 -*-</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">2</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation"><span class="cm-keyword">import</span> <span class="cm-variable">sys</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">3</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation"><span class="cm-keyword">import</span> <span class="cm-variable">os</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">4</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">5</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">6</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation"><span class="cm-keyword">def</span> <span class="cm-def">main</span>():</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">7</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation">  <span class="cm-builtin">print</span><span class=" CodeMirror-matchingbracket">(</span><span class="cm-number">0</span><span class=" CodeMirror-matchingbracket">)</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">8</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation"><span cm-text="">​</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">9</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation"><span class="cm-keyword">if</span> <span class="cm-variable">__name__</span> <span class="cm-operator">==</span> <span class="cm-string">'__main__'</span>:</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">10</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation">  <span class="cm-variable">main</span>()</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">11</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation"><span cm-text="">​</span></span></pre></div></div></div></div></div></div><div style="position: absolute; height: 14px; width: 1px; border-bottom: 0px solid transparent; top: 228px;"></div><div class="CodeMirror-gutters" style="height: 242px; left: 0px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div></div></div></div>
					</div>
				</div>

				<div id="com-answer-main" class="row">
					<div id="com-answer" class="row">
						<div class="col-md-8">F11:Full Screen(Focus code needed) ESC:Quit</div>
						<div class="col-md-4">

							<input id="compeSubmitCode" class="btn btn-default pull-right" value="Submit" onclick="subCode()" type="button">
							<input id="compeRunTest" class="btn btn-default pull-right" value="Run" onclick="runCode()" type="button">
							<input id="compeSaveCode" class="btn btn-default pull-right" value="Save" onclick="saveCode()" type="button">
							<input id="compeResetCode" class="btn btn-default pull-right" value="Reset" onclick="resetCode()" disabled="true" type="button">

						</div>
					</div>
					<div id="com-result" class="row">
						<div id="com-result-area" class="col-md-12">
							<textarea id="showRunResult" class="form-control" rows="4" readonly="readonly"></textarea>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div id="main-footer" class="row">
			<div class="col-md-12">Powered by NOKIA 2018 all rights reserved.</div>
		</div>
		<div id="back" style="display:none; POSITION:absolute; left:0; top:0; width:100%; height:100%; background-color:#000; filter:alpha(opacity=60)"></div>
		<div id="win" style="display:none;POSITION:absolute;left:50%; top:50%; width:300px; height:200px; margin-left:-300px; margin-top:-200px; border:1px solid #888; text-align:center">
			<section>
				<form method="POST" action="&lt;%= response.encodeURL(&quot;j_security_check&quot;) %&gt;">
					<div class="login-box">
						<div class="login-head">
							<p>SINGLE SIGN ON</p>
						</div>

						<div class="user-box">
							<label for="text">Username</label>

							<input data-val="true" data-val-required="The 用户名 field is required." id="UserName" name="j_username" placeholder="AD4" value="clxia" type="text">
						</div>
						<div class="password-box">
							<label for="pass-word">Password</label>
							<input data-val="true" data-val-required="The 密码 field is required." id="Password" name="j_password" placeholder="Password" type="password">

						</div>
						<div class="check-box">

							<div class="user-hint">

								<span id="allmessage"></span>
							</div>

						</div>
						<div>


							<input id="btnSubmit" value="Log In" type="submit">
							<div class="spinner-box4" id="main_s" style="display: none;">
								<div class="spinner4">
									<div class="spinner-container container1">
										<div class="circle1"></div>
										<div class="circle2"></div>
										<div class="circle3"></div>
										<div class="circle4"></div>
									</div>
									<div class="spinner-container container2">
										<div class="circle1"></div>
										<div class="circle2"></div>
										<div class="circle3"></div>
										<div class="circle4"></div>
									</div>
									<div class="spinner-container container3">
										<div class="circle1"></div>
										<div class="circle2"></div>
										<div class="circle3"></div>
										<div class="circle4"></div>
									</div>
								</div>
							</div>


						</div>
					</div>
				</form>
			</section>
		</div>
		<script type="text/javascript">
			initSystem();
		</script>
	</div>


</body></html>